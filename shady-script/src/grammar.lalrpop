use ::ast;
use ::span;

grammar;

pub AST: ast::AST = <Spanned<Item>*> => ast::AST(<>);

Item: ast::Item = {
    "image()" <Spanned<Block>> => ast::image(<>)
};

Block: ast::Block = "{" <Spanned<Stmt>*> "}" => ast::Block(<>);

Stmt: ast::Stmt = {
    "return" <Spanned<Expr>> => ast::ret(<>)
};

Expr: ast::Expr = {
    r"[0-9]+(\.[0-9]+)?" => ast::lit(<>),
    r"[a-zA-z][a-zA-z0-9]*" => ast::var(<>),
    "(" <Spanned<Expr>> "," <Spanned<Expr>> ")" => ast::vec2(<>),
    "(" <Spanned<Expr>> "," <Spanned<Expr>> "," <Spanned<Expr>> ")" => ast::vec3(<>),
};

Spanned<T>: span::Spanned<T> = <l:@L> <data:T> <r:@R> => span::spanned(l, r, data);

